{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tharu\\\\spot_api_react_new\\\\spot_api_rct\\\\spot_api_rct\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpotifyArtistSearch = () => {\n  _s();\n  var _artist$followers;\n  const [token, setToken] = useState('');\n  const [artist, setArtist] = useState(null);\n  const [topTracks, setTopTracks] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const CLIENT_ID = '975be576524f4742a5eabdc215b9fe9b';\n  const CLIENT_SECRET = 'bf9981d9b5d44a9986d7c2d6641161e9';\n  const ARTIST_NAME = 'Bruno Mars';\n  useEffect(() => {\n    getClientCreds();\n  }, []);\n  const getClientCreds = async () => {\n    try {\n      const authParameters = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'Authorization': 'Basic ' + CLIENT_ID + ':' + CLIENT_SECRET\n        },\n        body: 'grant_type=client_credentials'\n      };\n      const response = await fetch('https://accounts.spotify.com/api/token', authParameters);\n      const data = await response.json();\n      setToken(data.access_token);\n\n      // Once we have the token, search for the artist\n      if (data.access_token) {\n        await searchArtist(data.access_token);\n      }\n    } catch (err) {\n      setError('Failed to get access token');\n      console.error(err);\n    }\n  };\n  const searchArtist = async accessToken => {\n    try {\n      setIsLoading(true);\n      const searchUrl = `https://api.spotify.com/v1/search?q=${encodeURIComponent(ARTIST_NAME)}&type=artist`;\n      const response = await fetch(searchUrl, {\n        headers: {\n          'Authorization': `Bearer ${accessToken}`\n        }\n      });\n      const data = await response.json();\n      const foundArtist = data.artists.items[0];\n      setArtist(foundArtist);\n\n      // Get top tracks once we have the artist\n      if (foundArtist) {\n        await getTopTracks(foundArtist.id, accessToken);\n      }\n    } catch (err) {\n      setError('Failed to search artist');\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const getTopTracks = async (artistId, accessToken, market = 'US') => {\n    try {\n      const topTracksUrl = `https://api.spotify.com/v1/artists/${artistId}/top-tracks?market=${market}`;\n      const response = await fetch(topTracksUrl, {\n        headers: {\n          'Authorization': `Bearer ${accessToken}`\n        }\n      });\n      const data = await response.json();\n      setTopTracks(data.tracks);\n    } catch (err) {\n      setError('Failed to fetch top tracks');\n      console.error(err);\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 text-red-500\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full max-w-2xl mx-auto mt-4 bg-white rounded-lg shadow-md\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: [ARTIST_NAME, \"'s Top Tracks\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), artist && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-bold mb-2\",\n          children: \"Artist Info:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-1\",\n          children: [\"Name: \", artist.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-1\",\n          children: [\"Followers: \", (_artist$followers = artist.followers) === null || _artist$followers === void 0 ? void 0 : _artist$followers.total.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-1\",\n          children: [\"Popularity: \", artist.popularity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), topTracks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-bold mb-2\",\n          children: \"Top Tracks:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: topTracks.map(track => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-3 bg-gray-50 rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"font-medium\",\n              children: track.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-600\",\n              children: [\"Album: \", track.album.name, \" \\u2022 Popularity: \", track.popularity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this)]\n          }, track.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(SpotifyArtistSearch, \"WJMRHUWLIBGGZlvbpU9n3okCmu4=\");\n_c = SpotifyArtistSearch;\nexport default SpotifyArtistSearch;\nvar _c;\n$RefreshReg$(_c, \"SpotifyArtistSearch\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SpotifyArtistSearch","_s","_artist$followers","token","setToken","artist","setArtist","topTracks","setTopTracks","isLoading","setIsLoading","error","setError","CLIENT_ID","CLIENT_SECRET","ARTIST_NAME","getClientCreds","authParameters","method","headers","body","response","fetch","data","json","access_token","searchArtist","err","console","accessToken","searchUrl","encodeURIComponent","foundArtist","artists","items","getTopTracks","id","artistId","market","topTracksUrl","tracks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","followers","total","toLocaleString","popularity","length","map","track","album","_c","$RefreshReg$"],"sources":["C:/Users/tharu/spot_api_react_new/spot_api_rct/spot_api_rct/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst SpotifyArtistSearch = () => {\n  const [token, setToken] = useState('');\n  const [artist, setArtist] = useState(null);\n  const [topTracks, setTopTracks] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const CLIENT_ID = '975be576524f4742a5eabdc215b9fe9b';\n  const CLIENT_SECRET = 'bf9981d9b5d44a9986d7c2d6641161e9';\n  const ARTIST_NAME = 'Bruno Mars';\n\n  useEffect(() => {\n    getClientCreds();\n  }, []);\n\n  const getClientCreds = async () => {\n    try {\n      const authParameters = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'Authorization': 'Basic ' + CLIENT_ID + ':' + CLIENT_SECRET\n        },\n        body: 'grant_type=client_credentials'\n      };\n\n      const response = await fetch('https://accounts.spotify.com/api/token', authParameters);\n      const data = await response.json();\n      setToken(data.access_token);\n      \n      // Once we have the token, search for the artist\n      if (data.access_token) {\n        await searchArtist(data.access_token);\n      }\n    } catch (err) {\n      setError('Failed to get access token');\n      console.error(err);\n    }\n  };\n\n  const searchArtist = async (accessToken) => {\n    try {\n      setIsLoading(true);\n      const searchUrl = `https://api.spotify.com/v1/search?q=${encodeURIComponent(ARTIST_NAME)}&type=artist`;\n      \n      const response = await fetch(searchUrl, {\n        headers: {\n          'Authorization': `Bearer ${accessToken}`\n        }\n      });\n      \n      const data = await response.json();\n      const foundArtist = data.artists.items[0];\n      setArtist(foundArtist);\n      \n      // Get top tracks once we have the artist\n      if (foundArtist) {\n        await getTopTracks(foundArtist.id, accessToken);\n      }\n    } catch (err) {\n      setError('Failed to search artist');\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getTopTracks = async (artistId, accessToken, market = 'US') => {\n    try {\n      const topTracksUrl = `https://api.spotify.com/v1/artists/${artistId}/top-tracks?market=${market}`;\n      \n      const response = await fetch(topTracksUrl, {\n        headers: {\n          'Authorization': `Bearer ${accessToken}`\n        }\n      });\n      \n      const data = await response.json();\n      setTopTracks(data.tracks);\n    } catch (err) {\n      setError('Failed to fetch top tracks');\n      console.error(err);\n    }\n  };\n\n  if (isLoading) {\n    return <div className=\"p-4\">Loading...</div>;\n  }\n\n  if (error) {\n    return <div className=\"p-4 text-red-500\">Error: {error}</div>;\n  }\n\n  return (\n    <div className=\"w-full max-w-2xl mx-auto mt-4 bg-white rounded-lg shadow-md\">\n      <div className=\"p-6\">\n        <h1 className=\"text-2xl font-bold mb-4\">{ARTIST_NAME}'s Top Tracks</h1>\n        \n        {artist && (\n          <div className=\"mb-6\">\n            <h3 className=\"text-lg font-bold mb-2\">Artist Info:</h3>\n            <p className=\"mb-1\">Name: {artist.name}</p>\n            <p className=\"mb-1\">Followers: {artist.followers?.total.toLocaleString()}</p>\n            <p className=\"mb-1\">Popularity: {artist.popularity}</p>\n          </div>\n        )}\n        \n        {topTracks.length > 0 && (\n          <div>\n            <h3 className=\"text-lg font-bold mb-2\">Top Tracks:</h3>\n            <div className=\"space-y-2\">\n              {topTracks.map((track) => (\n                <div key={track.id} className=\"p-3 bg-gray-50 rounded\">\n                  <p className=\"font-medium\">{track.name}</p>\n                  <p className=\"text-sm text-gray-600\">\n                    Album: {track.album.name} • Popularity: {track.popularity}\n                  </p>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SpotifyArtistSearch;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}