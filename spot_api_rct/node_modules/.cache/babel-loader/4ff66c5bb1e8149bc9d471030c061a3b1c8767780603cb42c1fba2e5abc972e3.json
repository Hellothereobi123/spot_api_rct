{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tharu\\\\spot_api_react_new\\\\spot_api_rct\\\\spot_api_rct\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst express = require('express');\nconst request = require('request');\nconst App = () => {\n  _s();\n  var _artist$images$;\n  const [token, setToken] = useState('');\n  const [artist, setArtist] = useState(null);\n  const [topTracks, setTopTracks] = useState([]);\n  var client_id = '975be576524f4742a5eabdc215b9fe9b';\n  var client_secret = 'bf9981d9b5d44a9986d7c2d6641161e9';\n  const redirect_uri = 'http://localhost:3000/'; // Change to your redirect URI\n  const scopes = 'user-read-private user-read-email'; // Add more scopes if needed\n\n  var authOptions = {\n    url: 'https://accounts.spotify.com/api/token',\n    headers: {\n      'Authorization': 'Basic ' + new Buffer.from(client_id + ':' + client_secret).toString('base64')\n    },\n    form: {\n      grant_type: 'client_credentials'\n    },\n    json: true\n  };\n\n  // Function to get the access token via Implicit Grant Flow\n  const getAccessToken = async () => {\n    try {\n      let token = await getClientCreds(); // Await the promise resolution to get the token\n      //console.log(searchUrl);  // Now you can access the token here\n      //res.send(\"Token: \" + token);  // Send the token in the response if needed\n    } catch (error) {\n      //console.log(error);\n      res.status(500).send(\"Error occurred\");\n    }\n  };\n  const getClientCreds = () => {\n    return new Promise((resolve, reject) => {\n      request.post(authOptions, function (error, response, body) {\n        if (!error && response.statusCode === 200) {\n          token = body.access_token;\n          console.log(body);\n          resolve(token);\n        } else {\n          reject(\"Error fetching token\");\n        }\n      });\n    });\n  };\n  // Function to initiate Spotify login (Implicit Grant Flow)\n  const handleLogin = () => {\n    window.location = `https://accounts.spotify.com/authorize?client_id=${client_id}&redirect_uri=${redirect_uri}&scope=${scopes}&response_type=token&show_dialog=true`;\n  };\n\n  // Fetch artist data\n  const fetchArtist = async artistName => {\n    try {\n      const response = await axios.get(`https://api.spotify.com/v1/search?q=${encodeURIComponent(artistName)}&type=artist`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const artist = response.data.artists.items[0];\n      setArtist(artist);\n      fetchTopTracks(artist.id); // Fetch top tracks for the artist\n    } catch (error) {\n      console.error('Error fetching artist:', error);\n    }\n  };\n\n  // Fetch top tracks for an artist\n  const fetchTopTracks = async artistId => {\n    try {\n      const response = await axios.get(`https://api.spotify.com/v1/artists/${artistId}/top-tracks?market=US`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setTopTracks(response.data.tracks);\n    } catch (error) {\n      console.error('Error fetching top tracks:', error);\n    }\n  };\n  useEffect(() => {\n    getAccessToken();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !token ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login to Spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Spotify Artist Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getAccessToken(),\n        children: \"Search for Bruno Mars\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), artist && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Artist: \", artist.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: (_artist$images$ = artist.images[0]) === null || _artist$images$ === void 0 ? void 0 : _artist$images$.url,\n          alt: artist.name,\n          width: \"200\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), topTracks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Top Tracks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: topTracks.map(track => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: track.name\n          }, track.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"5uTx3gZ8TdLZVDXcIvrV8m/7tvo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","express","require","request","App","_s","_artist$images$","token","setToken","artist","setArtist","topTracks","setTopTracks","client_id","client_secret","redirect_uri","scopes","authOptions","url","headers","Buffer","from","toString","form","grant_type","json","getAccessToken","getClientCreds","error","res","status","send","Promise","resolve","reject","post","response","body","statusCode","access_token","console","log","handleLogin","window","location","fetchArtist","artistName","get","encodeURIComponent","Authorization","data","artists","items","fetchTopTracks","id","artistId","tracks","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","name","src","images","alt","width","length","map","track","_c","$RefreshReg$"],"sources":["C:/Users/tharu/spot_api_react_new/spot_api_rct/spot_api_rct/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nconst express = require('express');\nconst request = require('request');\n\nconst App = () => {\n  const [token, setToken] = useState('');\n  const [artist, setArtist] = useState(null);\n  const [topTracks, setTopTracks] = useState([]);\n\n  var client_id = '975be576524f4742a5eabdc215b9fe9b';\n  var client_secret = 'bf9981d9b5d44a9986d7c2d6641161e9';\n  const redirect_uri = 'http://localhost:3000/';  // Change to your redirect URI\n  const scopes = 'user-read-private user-read-email';  // Add more scopes if needed\n\n  var authOptions = {\n    url: 'https://accounts.spotify.com/api/token',\n    headers: {\n      'Authorization': 'Basic ' + (new Buffer.from(client_id + ':' + client_secret).toString('base64'))\n    },\n    form: {\n      grant_type: 'client_credentials'\n    },\n    json: true\n  };\n\n  // Function to get the access token via Implicit Grant Flow\n  const getAccessToken = async () => {\n    try {\n      let token = await getClientCreds();  // Await the promise resolution to get the token\n      //console.log(searchUrl);  // Now you can access the token here\n      //res.send(\"Token: \" + token);  // Send the token in the response if needed\n    } catch (error) {\n      //console.log(error);\n      res.status(500).send(\"Error occurred\");\n    }\n  };\n  const getClientCreds = () => {\n    return new Promise((resolve, reject) => {\n      request.post(authOptions, function(error, response, body) {\n      if (!error && response.statusCode === 200) {\n          token = body.access_token;\n          console.log(body);\n          resolve(token);\n      }\n      else{\n        reject(\"Error fetching token\");\n      }\n      });\n    });\n  }\n  // Function to initiate Spotify login (Implicit Grant Flow)\n  const handleLogin = () => {\n    window.location = `https://accounts.spotify.com/authorize?client_id=${client_id}&redirect_uri=${redirect_uri}&scope=${scopes}&response_type=token&show_dialog=true`;\n  };\n\n  // Fetch artist data\n  const fetchArtist = async (artistName) => {\n    try {\n      const response = await axios.get(`https://api.spotify.com/v1/search?q=${encodeURIComponent(artistName)}&type=artist`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      const artist = response.data.artists.items[0];\n      setArtist(artist);\n      fetchTopTracks(artist.id);  // Fetch top tracks for the artist\n    } catch (error) {\n      console.error('Error fetching artist:', error);\n    }\n  };\n\n  // Fetch top tracks for an artist\n  const fetchTopTracks = async (artistId) => {\n    try {\n      const response = await axios.get(`https://api.spotify.com/v1/artists/${artistId}/top-tracks?market=US`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      setTopTracks(response.data.tracks);\n    } catch (error) {\n      console.error('Error fetching top tracks:', error);\n    }\n  };\n\n  useEffect(() => {\n    getAccessToken();\n  }, []);\n\n  return (\n    <div>\n      {!token ? (\n        <button onClick={handleLogin}>Login to Spotify</button>\n      ) : (\n        <div>\n          <h1>Spotify Artist Search</h1>\n          <button onClick={() => getAccessToken()}>Search for Bruno Mars</button>\n\n          {artist && (\n            <div>\n              <h2>Artist: {artist.name}</h2>\n              <img src={artist.images[0]?.url} alt={artist.name} width=\"200\" />\n            </div>\n          )}\n\n          {topTracks.length > 0 && (\n            <div>\n              <h3>Top Tracks</h3>\n              <ul>\n                {topTracks.map((track) => (\n                  <li key={track.id}>{track.name}</li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}